@comment{{This file has been generated by bib2bib 1.99}}

@comment{{Command line: bib2bib -c 'year >= 2016' -s year -r sserl.bib}}

@comment{{This file has been generated by bib2bib 1.99}}

@comment{{Command line: bib2bib -c ' year >= 2016 ' groce.bib -ob tmp.bib}}

@comment{{This file has been generated by bib2bib 1.99}}

@comment{{Command line: bib2bib -c 'author : "Steinmacher"' -c year>=2016 bibs/steinmacher.bib}}

@string{iccs = {International Conference on Computational Science (ICCS)}}

@string{pdcat = {Parallel and Distributed Computing, Applications and Technologies (PDCAT)}}

@string{sac = {ACM Symposium on Applied Computing (SAC)}}

@string{ijpp = {Int J Parallel Prog}}

@string{comlan = {Comput Lang Syst Str}}

@article{DBLP:journals/cscw/BalaliSASG18,
  author = {Sogol Balali and
               Igor Steinmacher and
               Umayal Annamalai and
               Anita Sarma and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Newcomers' Barriers. . . Is That All? An Analysis of Mentors' and
               Newcomers' Barriers in {OSS} Projects},
  journal = {Computer Supported Cooperative Work},
  volume = {27},
  number = {3-6},
  pages = {679--714},
  year = {2018},
  url = {https://doi.org/10.1007/s10606-018-9310-8},
  doi = {10.1007/s10606-018-9310-8},
  timestamp = {Thu, 13 Sep 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/cscw/BalaliSASG18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/ese/AnicheBTGD18,
  author = {Mauricio Finavaro Aniche and
               Gabriele Bavota and
               Christoph Treude and
               Marco Aur{\'{e}}lio Gerosa and
               Arie van Deursen},
  title = {Code smells for Model-View-Controller architectures},
  journal = {Empirical Software Engineering},
  volume = {23},
  number = {4},
  pages = {2121--2157},
  year = {2018},
  url = {https://doi.org/10.1007/s10664-017-9540-2},
  doi = {10.1007/s10664-017-9540-2},
  timestamp = {Tue, 26 Jun 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/ese/AnicheBTGD18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/amcis/BertholdoMRGO18,
  author = {Ana Paula O. Bertholdo and
               Claudia de O. Melo and
               Artur S. Rozestraten and
               Marco Aur{\'{e}}lio Gerosa and
               Heather O'Brien},
  title = {User engagement in an open collaboration community after the insertion
               of a game design element: An online field experiment},
  booktitle = {24th Americas Conference on Information Systems, {AMCIS} 2018, New
               Orleans, LA, USA, August 16-18, 2018},
  year = {2018},
  crossref = {DBLP:conf/amcis/2018},
  url = {https://aisel.aisnet.org/amcis2018/VirtualCC/Presentations/11},
  timestamp = {Mon, 22 Oct 2018 17:24:45 +0200},
  biburl = {https://dblp.org/rec/bib/conf/amcis/BertholdoMRGO18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/chi/ChavesG18,
  author = {Ana Paula Chaves and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Single or Multiple Conversational Agents?: An Interactional Coherence
               Comparison},
  booktitle = {Proceedings of the 2018 {CHI} Conference on Human Factors in Computing
               Systems, {CHI} 2018, Montreal, QC, Canada, April 21-26, 2018},
  pages = {191},
  year = {2018},
  crossref = {DBLP:conf/chi/2018},
  url = {http://doi.acm.org/10.1145/3173574.3173765},
  doi = {10.1145/3173574.3173765},
  timestamp = {Mon, 23 Apr 2018 11:55:27 +0200},
  biburl = {https://dblp.org/rec/bib/conf/chi/ChavesG18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/criwg/BertholdoMRG18,
  author = {Ana Paula O. Bertholdo and
               Claudia de O. Melo and
               Artur S. Rozestraten and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Relations Between Actions Performed by Users and Their Engagement},
  booktitle = {Collaboration and Technology - 24th International Conference, {CRIWG}
               2018, Costa de Caparica, Portugal, September 5-7, 2018, Proceedings},
  pages = {207--222},
  year = {2018},
  crossref = {DBLP:conf/criwg/2018},
  url = {https://doi.org/10.1007/978-3-319-99504-5\_17},
  doi = {10.1007/978-3-319-99504-5\_17},
  timestamp = {Mon, 27 Aug 2018 10:59:26 +0200},
  biburl = {https://dblp.org/rec/bib/conf/criwg/BertholdoMRG18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icse/Steinmacher0WG18,
  author = {Igor Steinmacher and
               Gustavo Pinto and
               Igor Scaliante Wiese and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Almost there: a study on quasi-contributors in open source software
               projects},
  booktitle = {Proceedings of the 40th International Conference on Software Engineering,
               {ICSE} 2018, Gothenburg, Sweden, May 27 - June 03, 2018},
  pages = {256--266},
  year = {2018},
  crossref = {DBLP:conf/icse/2018},
  url = {http://doi.acm.org/10.1145/3180155.3180208},
  doi = {10.1145/3180155.3180208},
  timestamp = {Thu, 06 Sep 2018 11:44:08 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icse/Steinmacher0WG18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icse/AnicheTSW0SG18,
  author = {Maur{\'{\i}}cio Finavaro Aniche and
               Christoph Treude and
               Igor Steinmacher and
               Igor Wiese and
               Gustavo Pinto and
               Margaret{-}Anne D. Storey and
               Marco Aur{\'{e}}lio Gerosa},
  title = {How modern news aggregators help development communities shape and
               share knowledge},
  booktitle = {Proceedings of the 40th International Conference on Software Engineering,
               {ICSE} 2018, Gothenburg, Sweden, May 27 - June 03, 2018},
  pages = {499--510},
  year = {2018},
  crossref = {DBLP:conf/icse/2018},
  url = {http://doi.acm.org/10.1145/3180155.3180180},
  doi = {10.1145/3180155.3180180},
  timestamp = {Thu, 06 Sep 2018 11:44:08 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icse/AnicheTSW0SG18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/iwpc/SantosG18,
  author = {Rodrigo Magalh{\~{a}}es dos Santos and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Impacts of coding practices on readability},
  booktitle = {Proceedings of the 26th Conference on Program Comprehension, {ICPC}
               2018, Gothenburg, Sweden, May 27-28, 2018},
  pages = {277--285},
  year = {2018},
  crossref = {DBLP:conf/iwpc/2018},
  url = {http://doi.acm.org/10.1145/3196321.3196342},
  doi = {10.1145/3196321.3196342},
  timestamp = {Fri, 20 Jul 2018 09:26:51 +0200},
  biburl = {https://dblp.org/rec/bib/conf/iwpc/SantosG18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/oss/0001SG18,
  author = {Gustavo Pinto and
               Igor Steinmacher and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Leaving Behind the Software History When Transitioning to Open Source:
               Reasons and Implications},
  booktitle = {Open Source Systems: Enterprise Software and Solutions - 14th {IFIP}
               {WG} 2.13 International Conference, {OSS} 2018, Athens, Greece, June
               8-10, 2018, Proceedings},
  pages = {50--60},
  year = {2018},
  crossref = {DBLP:conf/oss/2018},
  url = {https://doi.org/10.1007/978-3-319-92375-8\_5},
  doi = {10.1007/978-3-319-92375-8\_5},
  timestamp = {Mon, 01 Oct 2018 13:50:20 +0200},
  biburl = {https://dblp.org/rec/bib/conf/oss/0001SG18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{GroceAJMH18,
  author = {Alex Groce and
               Iftekhar Ahmed and
               Carlos Jensen and
               Paul E. McKenney and
               Josie Holmes},
  title = {How verified (or tested) is my code? Falsification-driven verification
               and testing},
  journal = {Autom. Softw. Eng.},
  volume = {25},
  number = {4},
  pages = {917--960},
  year = {2018},
  doi = {10.1007/s10515-018-0240-y},
  timestamp = {Thu, 18 Oct 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/ase/GroceAJMH18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Groce18,
  author = {Alex Groce},
  title = {Passages},
  journal = {{ACM} {SIGSOFT} Software Engineering Notes},
  volume = {43},
  number = {1},
  pages = {1--2},
  year = {2018},
  doi = {10.1145/3178315.3178336},
  timestamp = {Fri, 13 Apr 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/sigsoft/Groce18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{HolmesGPMAKO18,
  author = {Josie Holmes and
               Alex Groce and
               Jervis Pinto and
               Pranjal Mittal and
               Pooria Azimi and
               Kevin Kellar and
               James O'Brien},
  title = {{TSTL:} the template scripting testing language},
  journal = {{STTT}},
  volume = {20},
  number = {1},
  pages = {57--78},
  year = {2018},
  doi = {10.1007/s10009-016-0445-y},
  timestamp = {Thu, 25 Jan 2018 00:00:00 +0100},
  biburl = {https://dblp.org/rec/bib/journals/sttt/HolmesGPMAKO18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{GroceHMSZ18,
  author = {Alex Groce and
               Josie Holmes and
               Darko Marinov and
               August Shi and
               Lingming Zhang},
  title = {An extensible, regular-expression-based tool for multi-language mutant
               generation},
  booktitle = {Proceedings of the 40th International Conference on Software Engineering:
               Companion Proceeedings, {ICSE} 2018, Gothenburg, Sweden, May 27 -
               June 03, 2018},
  pages = {25--28},
  year = {2018},
  doi = {10.1145/3183440.3183485},
  timestamp = {Tue, 04 Sep 2018 11:30:50 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icse/GroceHMSZ18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{ChristiG18,
  author = {Arpit Christi and
               Alex Groce},
  title = {Target Selection for Test-Based Resource Adaptation},
  booktitle = {2018 {IEEE} International Conference on Software Quality, Reliability
               and Security, {QRS} 2018, Lisbon, Portugal, July 16-20, 2018},
  pages = {458--469},
  year = {2018},
  doi = {10.1109/QRS.2018.00059},
  timestamp = {Wed, 08 Aug 2018 09:29:15 +0200},
  biburl = {https://dblp.org/rec/bib/conf/qrs/ChristiG18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{ABL2018:HPCS,
  author = {Allombert, Victor and Bourgoin, Mathias and  
                  Loulergue, Fr\'{e}d\'{e}ric},
  title = {Parallel Programming with {OC}aml: A Tutorial},
  pages = {3-11},
  doi = {10.1109/HPCS.2018.00016},
  year = 2018,
  booktitle = {International Conference on High Performance  
                  Computing and Simulation (HPCS)},
  publisher = {IEEE},
  address = {Orl\'{e}ans, France},
  publication_types = {tutorial_paper},
  abstract = {OCaml is a multi-paradigm (functional, imperative,  
                  object-oriented) high level sequential  
                  language. Types are statically inferred by the  
                  compiler and the type system is expressive and  
                  strong.  These features make OCaml a very productive  
                  language for developing efficient and safe programs.  
                  In this tutorial we present three frameworks for  
                  using OCaml to program scalable parallel  
                  architectures: BSML, Multi-ML and Spoc.}
}

@article{BKL2018:COMLAN,
  author = {Blanchard, Allan and Kosmatov, Nikolai and  
                  Loulergue, Fr\'{e}d\'{e}ric},
  title = {{MMFilter}: A {CHR}-Based Solver for Generation of  
                  Executions under Weak Memory Models},
  journal = comlan,
  year = 2018,
  volume = 53,
  pages = {121-142},
  doi = {10.1016/j.cl.2018.03.002},
  publication_types = {journal},
  abstract = {With the wide expansion of multiprocessor  
                  architectures, the analysis and reasoning for  
                  programs under weak memory models has become an  
                  important concern. This work presents MMFilter, an  
                  original constraint solver for generating program  
                  behaviors respecting a particular memory model. It  
                  is implemented in Prolog using CHR (Constraint  
                  Handling Rules). The CHR formalism provides a  
                  convenient generic solution for specifying memory  
                  models. It benefits from the existing optimized  
                  implementations of CHR and can be easily extended to  
                  new models. We present MMFilter design, illustrate  
                  the encoding of memory model constraints in CHR and  
                  discuss the benefits and limitations of the proposed  
                  technique.}
}

@inproceedings{BKL2018:HPCS,
  author = {Blanchard, Allan and Kosmatov, Nikolai and  
                  Loulergue, Fr\'{e}d\'{e}ric},
  title = {A Lesson on Verification of {IoT} Software with  
                  {F}rama-{C}},
  year = 2018,
  booktitle = {International Conference on High Performance  
                  Computing and Simulation (HPCS)},
  publisher = {IEEE},
  address = {Orl\'{e}ans, France},
  pages = {21-30},
  doi = {10.1109/HPCS.2018.00018},
  publication_types = {tutorial_paper},
  hlpp_rank = {B},
  abstract = { This paper is a tutorial introduction to Frama-C, a  
                  framework for the analysis and verification of  
                  sequential C programs, and in particular its EVA,  
                  WP, and E-ACSL plugins.  The examples are drawn from  
                  Contiki, a lightweight operating system for the  
                  Internet of Things.}
}

@inproceedings{BKL2018:NFM,
  author = {Blanchard, Allan and Kosmatov, Nikolai and  
                  Loulergue, Fr\'{e}d\'{e}ric},
  title = {{Ghosts for Lists: A Critical Module of Contiki  
                  Verified in Frama-C}},
  booktitle = {Nasa Formal Methods},
  year = 2018,
  series = {LNCS},
  publisher = {Springer},
  number = 10811,
  pages = {37-53},
  publication_types = {international_conference},
  abstract = {Internet of Things (IoT) applications are becoming  
                  increasingly critical and require rigorous formal  
                  verification.  In this paper we target Contiki, a  
                  widely used open-source OS for IoT, and present a  
                  verification case study of one of its most critical  
                  modules: that of linked lists.  Its API and list  
                  representation differ from the classical linked list  
                  implementations, and are particularly challenging  
                  for deductive verification.  The proposed  
                  verification technique relies on a parallel view of  
                  a list through a companion ghost array.  This  
                  approach makes it possible to perform most proofs  
                  automatically using the Frama-C/WP tool, only a  
                  small number of auxiliary lemmas being proved  
                  interactively in the Coq proof assistant.  We  
                  present an elegant segment-based reasoning over the  
                  companion array developed for the proof.  Finally,  
                  we validate the proposed specification by proving a  
                  few functions manipulating lists.},
  venue = {Newport News, VA, USA},
  doi = {10.1007/978-3-319-77935-5_3}
}

@inproceedings{BKL2018:SECDEV,
  author = {Blanchard, Allan and Kosmatov, Nikolai and  
                  Loulergue, Fr\'{e}d\'{e}ric},
  title = {Secure Your Things: Secure Development of {IoT}  
                  Software with {Frama-C}},
  booktitle = {IEEE Cybersecurity Development Conference (SecDev)},
  year = 2018,
  publisher = {IEEE},
  pages = {126-127},
  doi = {10.1109/SecDev.2018.00026},
  publication_types = {tutorial_presentation},
  abstract = { Among distributed systems, connected devices and  
                  services, also referred to as the Internet of Things  
                  (IoT), have proliferated very quickly in the past  
                  years. There are now billions of interconnected  
                  devices, and this number is growing. It is  
                  anticipated that by 2021, about 46 billions of  
                  devices will be in use.  Some of these devices are  
                  in service in security critical domains, and even in  
                  domains that are not necessarily critical, privacy  
                  issues may arise with devices collecting and  
                  transmitting a lot of personal information. Moreover  
                  insufficiently secured devices may be used for  
                  example for massive distributed denial of service  
                  attacks.  This raises important security  
                  challenges. Formal methods have been used  
                  successfully for years in highly critical domains,  
                  now they can help to bring security into the IoT  
                  field.  While the correctness of an implementation  
                  with respect to a formal functional specification  
                  provides the strongest form of guarantee, it can be  
                  very costly to achieve. In practice it is therefore  
                  more common to rely on a combination of formal  
                  methods to achieve an appropriate degree of  
                  guarantee: static analyses to guarantee the absence  
                  of runtime errors, deductive verification of  
                  functional correctness, dynamic verification for  
                  parts that cannot be proved using deductive  
                  verification.  Frama-C is a source code analysis  
                  platform that aims at conducting verification of  
                  industrial-size programs written in ISO C99 source  
                  code. Frama-C fully supports the combination of  
                  formal methods approach, by providing to its users  
                  with a collection of plug-ins that perform static  
                  and dynamic analysis for safety and security  
                  critical software. Moreover collaborative  
                  verification across cooperating plug-ins is enabled  
                  by their integration on top of a shared kernel, and  
                  their compliance to a common specification language:  
                  ACSL~.  Recently Frama-C has been applied to the  
                  verification of software in the context of the  
                  Internet of Things, more specifically the  
                  verification of modules of Contiki, an open source  
                  operating system for the IoT.}
}

@inproceedings{LBK2018:TAP,
  author = {Loulergue, Fr\'{e}d\'{e}ric and Blanchard, Allan and  
                  Kosmatov, Nikolai},
  title = {Ghosts for Lists: from Axiomatic to Executable  
                  Specifications},
  booktitle = {Tests and Proofs (TAP)},
  year = 2018,
  series = {LNCS},
  publisher = {Springer},
  pages = {177-184},
  volume = 10889,
  doi = {10.1007/978-3-319-92994-1_11},
  publication_types = {international_conference},
  abstract = {Internet of Things (IoT) applications are becoming  
                  increasingly critical and require formal  
                  verification.  Our recent work presented formal  
                  verification of the linked list module of Contiki,  
                  an OS for IoT. It relies on a parallel view of a  
                  linked list via a companion ghost array and uses an  
                  inductive predicate to link both views.  A few  
                  interactively proved lemmas allow for an automatic  
                  proof of other specifications, expressed in the ACSL  
                  specification language and proved with the  
                  Frama-C/WP tool.  In a broader verification context,  
                  especially as long as the whole system is not yet  
                  formally verified, it would be very useful to use  
                  runtime verification, in particular, to test client  
                  modules that use the list module.  It is not  
                  possible with the current specifications, which  
                  include an inductive predicate and axiomatically  
                  defined functions.  In this early-idea paper we show  
                  how to define a provably equivalent non-inductive  
                  predicate and a provably equivalent non-axiomatic  
                  function that belong to the executable subset \eacsl  
                  of ACSL and can be transformed into executable C  
                  code.  Finally, we propose an extension of Frama-C  
                  to handle both axiomatic specifications for  
                  deductive verification and executable specifications  
                  for runtime verification.}
}

@inproceedings{LKL2018:HILT,
  author = {Ly, Dara and Kosmatov, Nikolai and Loulergue,  
                  Fr\'{e}d\'{e}ric and Signoles, Julien},
  title = {Soundness of a Dataflow Analysis for Memory  
                  Monitoring},
  publication_types = {international_workshop},
  booktitle = {Workshop on Languages and Tools for Ensuring  
                  Cyber-Resilience in Critical Software-Intensive  
                  Systems (HILT)},
  year = 2018,
  publisher = {ACM},
  note = {to appear},
  abstract = {An important concern addressed by runtime  
                  verification tools for C code is related to  
                  detecting memory errors. It requires to monitor some  
                  properties of memory locations (e.g. their validity  
                  and initialization) along the whole program  
                  execution. Static analysis based optimizations have  
                  been shown to significantly improve the performances  
                  of such tools by reducing the monitoring of  
                  irrelevant locations. However, soundness of the  
                  verdict of the whole tool strongly depends on the  
                  soundness of the underlying static analysis  
                  technique. This paper tackles this issue for the  
                  dataflow analysis used to optimize the E-ACSL  
                  runtime assertion checking tool. We formally define  
                  the core dataflow analysis used by E-ACSL and prove  
                  its soundness.},
  address = {Boston, MA, USA}
}

@inproceedings{LW2018:ATC,
  author = {Loulergue, Fr\'{e}d\'{e}ric and Whitney, Christopher  
                  D.},
  title = {Verified Programs for Frequent Itemset Mining},
  pages = {1516-1523},
  doi = {10.1109/SmartWorld.2018.00262},
  year = 2018,
  booktitle = {15th IEEE International Conference on Advanced and  
                  Trusted Computing (ATC 2018)},
  publisher = {IEEE},
  address = {Guangzhou, China},
  publication_types = {international_conference},
  hlpp_rank = {C},
  abstract = {Frequent itemset mining is one pillar of machine  
                  learning and is very important for many data mining  
                  applications. There are many different algorithms  
                  for frequent itemset mining, but to our knowledge no  
                  implementation has been proven correct using  
                  computer aided verification. Hu et al. derived on  
                  paper an efficient algorithm for this problem,  
                  starting from an inefficient functional program and  
                  by using program calculation derived an efficient  
                  version. Based on their work, we propose a formally  
                  verified functional implementation for frequent  
                  itemset mining developed with the Coq proof  
                  assistant. All the proposed programs are evaluated  
                  on classical datasets and are compared to a non  
                  verified Java implementation of the Apriori  
                  algorithm.  }
}

@inproceedings{NL2018:HLPP,
  title = {Transforming Powerlist Based Divide\&Conquer  
                  Programs for an Improved Execution Model},
  author = {Niculescu, Virginia and Loulergue, Fr{\'e}d{\'e}ric},
  booktitle = {{High Level Parallel Programming and Applications  
                  (HLPP)}},
  address = {Orl\'{e}ans, France},
  year = 2018,
  publication_types = {international_conference_communication},
  hlpp_educore = {C},
  abstract = {Divide\&Conquer (DC) represents an important design  
                  pattern for parallel programs.  Powerlists are data  
                  structures that could be successfully used for  
                  defining parallel programs based on this paradigm.  
                  These parallel recursive data structures and their  
                  algebraic theories offer both a methodology to  
                  design parallel algorithms and parallel programming  
                  abstractions to ease the development of parallel  
                  applications.  The paper presents an improvement of  
                  the parallel recursive programs defined based on  
                  powerlists. The improvements is achieved by applying  
                  transformation rules that introduce tuple functions  
                  and prefix operators, for which a more efficient  
                  execution model is defined. Together with the  
                  execution model, a cost model is also defined in  
                  order to allow a proper evaluation.  The treated  
                  examples emphasize the fact that the transformation  
                  leads to important improvements of the programs, by  
                  reducing their theoretical time-complexities, and  
                  the number of recursive calls, and also by allowing  
                  splitting and combining of different data structures  
                  to be packed together. Also, enhancing the function  
                  that has to be computed to other useful functions  
                  using a tuple, could improved the cost reduction  
                  even more.}
}

@inproceedings{PL2018:HPCS,
  author = {Philippe, Jolan and Loulergue, Fr\'{e}d\'{e}ric},
  title = {Towards the Generation of Correct {J}ava Programs  
                  (Poster)},
  year = 2018,
  booktitle = {International Conference on High Performance  
                  Computing and Simulation (HPCS)},
  publisher = {IEEE},
  address = {Orl\'{e}ans, France},
  hlpp_educore = {B},
  publication_types = {poster},
  pages = {1055-1056},
  doi = {10.1109/HPCS.2018.00166}
}

@inproceedings{SBL2018:HPCS,
  author = {Souaf, Salwa and Berthom\'{e}, Pascal and Loulergue,  
                  Fr\'{e}d\'{e}ric},
  title = {{A Cloud Brokerage Solution: Formal Methods Meet  
                  Security in Cloud Federations}},
  year = 2018,
  publication_types = {international_conference},
  hlpp_rank = {B},
  abstract = {Cloud Computing has known in the past few years a  
                  fast development, leading to a spike in the number  
                  of companies competing on providing the best Cloud  
                  services. This makes it harder for potential Cloud  
                  customers to chose the adequate provider. Despite  
                  its wide adoption, many are still hesitant due to  
                  the security issues Cloud Computing poses. In this  
                  paper, we propose a brokerage solution that  
                  formalizes security properties under the form of  
                  inter-VM relations, and gives the possibility of  
                  setting these security requirements to its customers  
                  from the first steps. This solution uses formal  
                  methods and the finite model finder KodKod to verify  
                  the consistency of the customer's requirements, and  
                  to find a placement for his deployment model.},
  booktitle = {International Conference on High Performance  
                  Computing Simulation (HPCS)},
  pages = {691-699},
  doi = {10.1109/HPCS.2018.00113},
  publisher = {IEEE}
}

@inproceedings{SL2018:HPCS,
  author = {Souaf, Salwa and Loulergue, Fr\'{e}d\'{e}ric},
  title = {Strong Security Guarantees: from {A}lloy to {C}oq  
                  (Poster)},
  year = 2018,
  booktitle = {International Conference on High Performance  
                  Computing and Simulation (HPCS)},
  publisher = {IEEE},
  address = {Orl\'{e}ans, France},
  hlpp_educore = {B},
  publication_types = {poster},
  pages = {1057-1058},
  doi = {10.1109/HPCS.2018.00167}
}

@inproceedings{TL2018:ATC,
  author = {Tesson, Julien and Loulergue, Fr\'{e}d\'{e}ric},
  title = {Interactive Bulk Synchronous Parallel Functional  
                  Programming in a Browser},
  pages = {1593-1598},
  doi = {10.1109/SmartWorld.2018.00273},
  year = 2018,
  booktitle = {15th IEEE International Conference on Advanced and  
                  Trusted Computing (ATC 2018)},
  publisher = {IEEE},
  address = {Guangzhou, China},
  publication_types = {international_conference},
  hlpp_rank = {C},
  abstract = {This paper presents the design and implementation of  
                  a sequential simulator for the parallel functional  
                  language BSML based on the parallel computation  
                  model Bulk Synchronous Parallelism (BSP). This  
                  simulator is implemented in sequential, runs in any  
                  browser, and provides a graphical representation of  
                  the parallel executions.  Due to the pure functional  
                  nature of BSML, the results obtained by this  
                  simulator are the same than the results that could  
                  be obtained by executing the program in parallel}
}

@article{DBLP:journals/cscw/BalaliSASG18,
  author = {Sogol Balali and
               Igor Steinmacher and
               Umayal Annamalai and
               Anita Sarma and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Newcomers' Barriers. . . Is That All? An Analysis of Mentors' and
               Newcomers' Barriers in {OSS} Projects},
  journal = {Computer Supported Cooperative Work},
  volume = {27},
  number = {3-6},
  pages = {679--714},
  year = {2018},
  url = {https://doi.org/10.1007/s10606-018-9310-8},
  doi = {10.1007/s10606-018-9310-8},
  timestamp = {Thu, 13 Sep 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/cscw/BalaliSASG18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icse/ZanattaMS18,
  author = {Alexandre Lazaretti Zanatta and
               Leticia Machado and
               Igor Steinmacher},
  title = {Competence, Collaboration, and Time Management: Barriers and Recommendations
               for Crowdworkers},
  booktitle = {5th {IEEE/ACM} International Workshop on Crowd Sourcing in Software
               Engineering, CSI-SE@ICSE 2018, Gothenburg, Sweden, May 27 - June 3,
               2018},
  pages = {9--16},
  year = {2018},
  crossref = {DBLP:conf/icse/2018csise},
  url = {http://ieeexplore.ieee.org/document/8445785},
  timestamp = {Fri, 31 Aug 2018 14:12:22 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icse/ZanattaMS18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icse/0001DS18,
  author = {Gustavo Pinto and
               Luiz Felipe Dias and
               Igor Steinmacher},
  title = {Who gets a patch accepted first?: comparing the contributions of employees
               and volunteers},
  booktitle = {Proceedings of the 11th International Workshop on Cooperative and
               Human Aspects of Software Engineering, {ICSE} 2018, Gothenburg, Sweden,
               May 27 - June 03, 2018},
  pages = {110--113},
  year = {2018},
  crossref = {DBLP:conf/icse/2018chase},
  url = {http://doi.acm.org/10.1145/3195836.3195858},
  doi = {10.1145/3195836.3195858},
  timestamp = {Thu, 30 Aug 2018 12:14:13 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icse/0001DS18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icse/Steinmacher0WG18,
  author = {Igor Steinmacher and
               Gustavo Pinto and
               Igor Scaliante Wiese and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Almost there: a study on quasi-contributors in open source software
               projects},
  booktitle = {Proceedings of the 40th International Conference on Software Engineering,
               {ICSE} 2018, Gothenburg, Sweden, May 27 - June 03, 2018},
  pages = {256--266},
  year = {2018},
  crossref = {DBLP:conf/icse/2018},
  url = {http://doi.acm.org/10.1145/3180155.3180208},
  doi = {10.1145/3180155.3180208},
  timestamp = {Thu, 06 Sep 2018 11:44:08 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icse/Steinmacher0WG18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icse/AnicheTSW0SG18,
  author = {Maur{\'{\i}}cio Finavaro Aniche and
               Christoph Treude and
               Igor Steinmacher and
               Igor Wiese and
               Gustavo Pinto and
               Margaret{-}Anne D. Storey and
               Marco Aur{\'{e}}lio Gerosa},
  title = {How modern news aggregators help development communities shape and
               share knowledge},
  booktitle = {Proceedings of the 40th International Conference on Software Engineering,
               {ICSE} 2018, Gothenburg, Sweden, May 27 - June 03, 2018},
  pages = {499--510},
  year = {2018},
  crossref = {DBLP:conf/icse/2018},
  url = {http://doi.acm.org/10.1145/3180155.3180180},
  doi = {10.1145/3180155.3180180},
  timestamp = {Thu, 06 Sep 2018 11:44:08 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icse/AnicheTSW0SG18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/oss/0001SG18,
  author = {Gustavo Pinto and
               Igor Steinmacher and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Leaving Behind the Software History When Transitioning to Open Source:
               Reasons and Implications},
  booktitle = {Open Source Systems: Enterprise Software and Solutions - 14th {IFIP}
               {WG} 2.13 International Conference, {OSS} 2018, Athens, Greece, June
               8-10, 2018, Proceedings},
  pages = {50--60},
  year = {2018},
  crossref = {DBLP:conf/oss/2018},
  url = {https://doi.org/10.1007/978-3-319-92375-8\_5},
  doi = {10.1007/978-3-319-92375-8\_5},
  timestamp = {Mon, 01 Oct 2018 13:50:20 +0200},
  biburl = {https://dblp.org/rec/bib/conf/oss/0001SG18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/sbes/VazMS18,
  author = {Luis Vaz and
               Sabrina Marczak and
               Igor Steinmacher},
  title = {An empirical study on task documentation in software crowdsourcing:
               the case of the topcoder platform},
  booktitle = {Proceedings of the {XXXII} Brazilian Symposium on Software Engineering,
               {SBES} 2018, Sao Carlos, Brazil, September 17-21, 2018},
  pages = {62--71},
  year = {2018},
  crossref = {DBLP:conf/sbes/2018},
  url = {http://doi.acm.org/10.1145/3266237.3266265},
  doi = {10.1145/3266237.3266265},
  timestamp = {Wed, 17 Oct 2018 13:01:08 +0200},
  biburl = {https://dblp.org/rec/bib/conf/sbes/VazMS18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/sbes/FerreiraS0SM18,
  author = {Clarice Ferreira and
               Cleice Souza and
               Gustavo Pinto and
               Igor Steinmacher and
               Paulo Meirelles},
  title = {When students become contributors: leveraging {OSS} contributions
               in software engineering courses},
  booktitle = {Proceedings of the {XXXII} Brazilian Symposium on Software Engineering,
               {SBES} 2018, Sao Carlos, Brazil, September 17-21, 2018},
  pages = {260--269},
  year = {2018},
  crossref = {DBLP:conf/sbes/2018},
  url = {http://doi.acm.org/10.1145/3266237.3266250},
  doi = {10.1145/3266237.3266250},
  timestamp = {Wed, 17 Oct 2018 13:01:08 +0200},
  biburl = {https://dblp.org/rec/bib/conf/sbes/FerreiraS0SM18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/sbes/SilvaGSC18,
  author = {Williamson Silva and
               Bruno Gadelha and
               Igor Steinmacher and
               Tayana Conte},
  title = {What are the differences between group and individual modeling when
               learning UML?},
  booktitle = {Proceedings of the {XXXII} Brazilian Symposium on Software Engineering,
               {SBES} 2018, Sao Carlos, Brazil, September 17-21, 2018},
  pages = {308--317},
  year = {2018},
  crossref = {DBLP:conf/sbes/2018},
  url = {http://doi.acm.org/10.1145/3266237.3266255},
  doi = {10.1145/3266237.3266255},
  timestamp = {Wed, 17 Oct 2018 13:01:08 +0200},
  biburl = {https://dblp.org/rec/bib/conf/sbes/SilvaGSC18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/csur/SantanaCGKM17,
  author = {Eduardo Felipe Zambom Santana and
               Ana Paula Chaves and
               Marco Aur{\'{e}}lio Gerosa and
               Fabio Kon and
               Dejan S. Milojicic},
  title = {Software Platforms for Smart Cities: Concepts, Requirements, Challenges,
               and a Unified Reference Architecture},
  journal = {{ACM} Comput. Surv.},
  volume = {50},
  number = {6},
  pages = {78:1--78:37},
  year = {2017},
  url = {http://doi.acm.org/10.1145/3124391},
  doi = {10.1145/3124391},
  timestamp = {Thu, 11 Jan 2018 00:00:00 +0100},
  biburl = {https://dblp.org/rec/bib/journals/csur/SantanaCGKM17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/jss/WieseRSKOTG17,
  author = {Igor Scaliante Wiese and
               Reginaldo R{\'{e}} and
               Igor Steinmacher and
               Rodrigo Takashi Kuroda and
               Gustavo Ansaldi Oliva and
               Christoph Treude and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Using contextual information to predict co-changes},
  journal = {Journal of Systems and Software},
  volume = {128},
  pages = {220--235},
  year = {2017},
  url = {https://doi.org/10.1016/j.jss.2016.07.016},
  doi = {10.1016/j.jss.2016.07.016},
  timestamp = {Thu, 28 Dec 2017 00:00:00 +0100},
  biburl = {https://dblp.org/rec/bib/journals/jss/WieseRSKOTG17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/csee/PintoFSG17,
  author = {Gustavo Henrique Lima Pinto and
               Fernando Figueira Filho and
               Igor Steinmacher and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Training Software Engineers Using Open-Source Software: The Professors'
               Perspective},
  booktitle = {30th {IEEE} Conference on Software Engineering Education and Training,
               CSEE{\&}T 2017, Savannah, GA, USA, November 7-9, 2017},
  pages = {117--121},
  year = {2017},
  crossref = {DBLP:conf/csee/2017},
  url = {https://doi.org/10.1109/CSEET.2017.27},
  doi = {10.1109/CSEET.2017.27},
  timestamp = {Thu, 21 Dec 2017 12:57:47 +0100},
  biburl = {https://dblp.org/rec/bib/conf/csee/PintoFSG17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icse/DinizSGS17,
  author = {Guilherme C. Diniz and
               Marco Aur{\'{e}}lio Graciotto Silva and
               Marco Aur{\'{e}}lio Gerosa and
               Igor Steinmacher},
  title = {Using Gamification to Orient and Motivate Students to Contribute to
               {OSS} Projects},
  booktitle = {10th {IEEE/ACM} International Workshop on Cooperative and Human Aspects
               of Software Engineering, CHASE@ICSE 2017, Buenos Aires, Argentina,
               May 23, 2017},
  pages = {36--42},
  year = {2017},
  crossref = {DBLP:conf/icse/2017chase},
  url = {https://doi.org/10.1109/CHASE.2017.7},
  doi = {10.1109/CHASE.2017.7},
  timestamp = {Thu, 07 Sep 2017 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icse/DinizSGS17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icsm/SilvaWGSG17,
  author = {Jefferson De Oliveira Silva and
               Igor Scaliante Wiese and
               Daniel M. Germ{\'{a}}n and
               Igor Fabio Steinmacher and
               Marco Aur{\'{e}}lio Gerosa},
  title = {How Long and How Much: What to Expect from Summer of Code Participants?},
  booktitle = {2017 {IEEE} International Conference on Software Maintenance and Evolution,
               {ICSME} 2017, Shanghai, China, September 17-22, 2017},
  pages = {69--79},
  year = {2017},
  crossref = {DBLP:conf/icsm/2017},
  url = {https://doi.org/10.1109/ICSME.2017.81},
  doi = {10.1109/ICSME.2017.81},
  timestamp = {Fri, 01 Dec 2017 00:00:00 +0100},
  biburl = {https://dblp.org/rec/bib/conf/icsm/SilvaWGSG17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icsm/RobillardMTBCEG17,
  author = {Martin P. Robillard and
               Andrian Marcus and
               Christoph Treude and
               Gabriele Bavota and
               Oscar Chaparro and
               Neil A. Ernst and
               Marco Aur{\'{e}}lio Gerosa and
               Michael W. Godfrey and
               Michele Lanza and
               Mario Linares V{\'{a}}squez and
               Gail C. Murphy and
               Laura Moreno and
               David C. Shepherd and
               Edmund Wong},
  title = {On-demand Developer Documentation},
  booktitle = {2017 {IEEE} International Conference on Software Maintenance and Evolution,
               {ICSME} 2017, Shanghai, China, September 17-22, 2017},
  pages = {479--483},
  year = {2017},
  crossref = {DBLP:conf/icsm/2017},
  url = {https://doi.org/10.1109/ICSME.2017.17},
  doi = {10.1109/ICSME.2017.17},
  timestamp = {Fri, 01 Dec 2017 00:00:00 +0100},
  biburl = {https://dblp.org/rec/bib/conf/icsm/RobillardMTBCEG17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/sbes/WesselAOGW17,
  author = {Mairieli Santos Wessel and
               Mauricio Finavaro Aniche and
               Gustavo Ansaldi Oliva and
               Marco Aur{\'{e}}lio Gerosa and
               Igor Scaliante Wiese},
  title = {Tweaking Association Rules to Optimize Software Change Recommendations},
  booktitle = {Proceedings of the 31st Brazilian Symposium on Software Engineering,
               {SBES} 2017, Fortaleza, CE, Brazil, September 20-22, 2017},
  pages = {94--103},
  year = {2017},
  crossref = {DBLP:conf/sbes/2017},
  url = {http://doi.acm.org/10.1145/3131151.3131163},
  doi = {10.1145/3131151.3131163},
  timestamp = {Mon, 18 Sep 2017 09:07:48 +0200},
  biburl = {https://dblp.org/rec/bib/conf/sbes/WesselAOGW17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/sbes/SilvaWSG17,
  author = {Jefferson O. Silva and
               Igor Scaliante Wiese and
               Igor Steinmacher and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Students' Engagement in Open Source Projects: An Analysis of Google
               Summer of Code},
  booktitle = {Proceedings of the 31st Brazilian Symposium on Software Engineering,
               {SBES} 2017, Fortaleza, CE, Brazil, September 20-22, 2017},
  pages = {224--233},
  year = {2017},
  crossref = {DBLP:conf/sbes/2017},
  url = {http://doi.acm.org/10.1145/3131151.3131156},
  doi = {10.1145/3131151.3131156},
  timestamp = {Mon, 18 Sep 2017 09:07:48 +0200},
  biburl = {https://dblp.org/rec/bib/conf/sbes/SilvaWSG17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Groce17,
  author = {Alex Groce},
  title = {Passages},
  journal = {{ACM} {SIGSOFT} Software Engineering Notes},
  volume = {42},
  number = {2},
  pages = {5--6},
  year = {2017},
  doi = {10.1145/3089649.3089652},
  timestamp = {Thu, 29 Jun 2017 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/sigsoft/Groce17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Groce17a,
  author = {Alex Groce},
  title = {Passages},
  journal = {{ACM} {SIGSOFT} Software Engineering Notes},
  volume = {42},
  number = {3},
  pages = {9},
  year = {2017},
  doi = {10.1145/3127360.3127362},
  timestamp = {Tue, 05 Sep 2017 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/sigsoft/Groce17a},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Groce17b,
  author = {Alex Groce},
  title = {Passages},
  journal = {{ACM} {SIGSOFT} Software Engineering Notes},
  volume = {42},
  number = {4},
  pages = {5--6},
  year = {2017},
  doi = {10.1145/3149485.3149489},
  timestamp = {Wed, 07 Feb 2018 00:00:00 +0100},
  biburl = {https://dblp.org/rec/bib/journals/sigsoft/Groce17b},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{GopinathAAJG17a,
  author = {Rahul Gopinath and
               Iftekhar Ahmed and
               Mohammad Amin Alipour and
               Carlos Jensen and
               Alex Groce},
  title = {Does choice of mutation tool matter?},
  journal = {Software Quality Journal},
  volume = {25},
  number = {3},
  pages = {871--920},
  year = {2017},
  doi = {10.1007/s11219-016-9317-7},
  timestamp = {Sun, 09 Sep 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/sqj/GopinathAAJG17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{GopinathAAJG17b,
  author = {Rahul Gopinath and
               Iftekhar Ahmed and
               Mohammad Amin Alipour and
               Carlos Jensen and
               Alex Groce},
  title = {Mutation Reduction Strategies Considered Harmful},
  journal = {{IEEE} Trans. Reliability},
  volume = {66},
  number = {3},
  pages = {854--874},
  year = {2017},
  doi = {10.1109/TR.2017.2705662},
  timestamp = {Sun, 09 Sep 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/tr/GopinathAAJG17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{GopinathJG17,
  author = {Rahul Gopinath and
               Carlos Jensen and
               Alex Groce},
  title = {The Theory of Composite Faults},
  booktitle = {2017 {IEEE} International Conference on Software Testing, Verification
               and Validation, {ICST} 2017, Tokyo, Japan, March 13-17, 2017},
  pages = {47--57},
  year = {2017},
  doi = {10.1109/ICST.2017.12},
  timestamp = {Wed, 14 Jun 2017 10:32:58 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icst/GopinathJG17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{AhmedJGM17,
  author = {Iftekhar Ahmed and
               Carlos Jensen and
               Alex Groce and
               Paul E. McKenney},
  title = {Applying Mutation Analysis on Kernel Test Suites: An Experience Report},
  booktitle = {2017 {IEEE} International Conference on Software Testing, Verification
               and Validation Workshops, {ICST} Workshops 2017, Tokyo, Japan, March
               13-17, 2017},
  pages = {110--115},
  year = {2017},
  doi = {10.1109/ICSTW.2017.26},
  timestamp = {Sun, 09 Sep 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icst/AhmedJGM17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{GroceHK17,
  author = {Alex Groce and
               Josie Holmes and
               Kevin Kellar},
  title = {One test to rule them all},
  booktitle = {Proceedings of the 26th {ACM} {SIGSOFT} International Symposium on
               Software Testing and Analysis, Santa Barbara, CA, USA, July 10 - 14,
               2017},
  pages = {1--11},
  year = {2017},
  doi = {10.1145/3092703.3092704},
  timestamp = {Thu, 13 Jul 2017 14:49:34 +0200},
  biburl = {https://dblp.org/rec/bib/conf/issta/GroceHK17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{HolmesG17,
  author = {Josie Holmes and
               Alex Groce},
  title = {A suite of tools for making effective use of automatically generated
               tests},
  booktitle = {Proceedings of the 26th {ACM} {SIGSOFT} International Symposium on
               Software Testing and Analysis, Santa Barbara, CA, USA, July 10 - 14,
               2017},
  pages = {356--359},
  year = {2017},
  doi = {10.1145/3092703.3098220},
  timestamp = {Thu, 13 Jul 2017 14:49:34 +0200},
  biburl = {https://dblp.org/rec/bib/conf/issta/HolmesG17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{ChristiGG17,
  author = {Arpit Christi and Alex Groce and Rahul Gopinath},
  title = {Resource Adaptation via Test-Based Software Minimization},
  booktitle = {11th {IEEE} International Conference on Self-Adaptive and Self-Organizing
               Systems, {SASO} 2017, Tucson, AZ, USA, September 18-22, 2017},
  pages = {61--70},
  year = {2017},
  doi = {10.1109/SASO.2017.15},
  timestamp = {Wed, 11 Apr 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/conf/saso/ChristiGG17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{abs-1711-01661,
  author = {Alex Groce and Josie Holmes},
  title = {Provenance and Pseudo-Provenance for Seeded Learning-Based Automated Test Generation},
  journal = {CoRR},
  volume = {abs/1711.01661},
  year = {2017},
  url = {http://arxiv.org/abs/1711.01661},
  archiveprefix = {arXiv},
  eprint = {1711.01661},
  timestamp = {Mon, 13 Aug 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/corr/abs-1711-01661},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@techreport{BKL2017:RR,
  author = {Blanchard, Allan and Kosmatov, Nikolai and 
                  Loulergue, Fr\'{e}d\'{e}ric},
  title = {{Concurrent Program Verification by Code 
                  Transformation: Correctness}},
  institution = {LIFO, Universit\'{e} d'Orl\'{e}ans},
  year = 2017,
  hlpp_category = {research_report},
  type = {Research Report},
  number = {RR-2017-03},
  url = {http://www.univ-orleans.fr/lifo/prodsci/rapports/RR/RR2017/RR-2017-03.pdf},
  abstract = { Frama-C is a framework that provides a common 
                  infrastructure and a common behavioral specification 
                  language to plugins that implement various static 
                  and dynamic analyses of C programs. Most plugin do 
                  not support concurrency. We have proposed 
                  \textsc{conc2seq} a plugin that handles concurrent C 
                  programs, based on program transformation to 
                  leverage the existing huge code base of plugins.  In 
                  this paper we formalize and sketch the correctness 
                  of the program transformation principle behind 
                  \textsc{conc2seq}, and present an effort towards the 
                  full mechanization of both the formalization and 
                  proofs with the proof assistant Coq }
}

@inproceedings{BLK2017:VPT,
  author = {Blanchard, Allan and Loulergue, Fr\'{e}d\'{e}ric and Kosmatov, Nikolai},
  year = 2017,
  title = {{From Concurrent Programs to Simulating Sequential 
                  Programs: Correctness of a Transformation}},
  editor = {Lisitsa, Alexei and Nemytykh, Andrei P. and 
                  Proietti, Maurizio},
  booktitle = {Proceedings Fifth International Workshop on 
                  Verification and Program Transformation, Uppsala, 
                  Sweden, 29th April 2017},
  series = {Electronic Proceedings in Theoretical Computer 
                  Science},
  volume = 253,
  publisher = {Open Publishing Association},
  pages = {109-123},
  doi = {10.4204/EPTCS.253.9},
  hlpp_category = {international_workshop},
  abstract = {Frama-C is a software analysis framework that 
                  provides a common infrastructure and a common 
                  behavioral specification language to plugins that 
                  implement various static and dynamic analyses of C 
                  programs. Most plugins do not support 
                  concurrency. We have proposed conc2seq, a Frama-C 
                  plugin based on program transformation, capable to 
                  leverage the existing huge code base of plugins and 
                  to handle concurrent C programs.  In this paper we 
                  formalize and sketch the proof of correctness of the 
                  program transformation principle behind conc2seq, 
                  and present an effort towards the full mechanization 
                  of both the for- malization and proofs with the 
                  proof assistant Coq.}
}

@inproceedings{JDB2017:ICCS,
  title = {{Replicated Synchronization for Imperative BSP 
                  Programs}},
  author = {Jakobsson, Arvid and Dabrowski, Fr{\'e}d{\'e}ric and 
                  Bousdira, Wadoud and Loulergue, Fr{\'e}d{\'e}ric and 
                  Hains, Ga\'{e}tan},
  booktitle = iccs,
  year = 2017,
  series = {Procedia Computer Science},
  hlpp_educore = {A},
  address = {Zurich, Switzerland},
  abstract = {The BSP model (Bulk Synchronous Parallel) simplifies 
                  the construction and evaluation of parallel 
                  algorithms, with its simplified synchronization 
                  structure and cost model. Nevertheless, imperative 
                  BSP programs can suffer from synchronization errors. 
                  Programs with textually aligned barriers are free 
                  from such errors, and this structure eases program 
                  comprehension.  We propose a simplified 
                  formalization of barrier inference as data flow 
                  analysis, which verifies statically whether an 
                  imperative BSP program has replicated 
                  synchronization, which is a sufficient condition for 
                  textual barrier alignment.},
  hlpp_category = {international_conference},
  publisher = {Elsevier},
  pages = {535-544},
  doi = {10.1016/j.procs.2017.05.123}
}

@article{LBT2015:IJPP,
  author = {Loulergue, Fr\'{e}d\'{e}ric and Bousdira, Wadoud and 
                  Tesson, Julien},
  title = {{Calculating Parallel Programs in Coq using List 
                  Homomorphisms}},
  journal = ijpp,
  year = 2017,
  hlpp_ranking = {A},
  hlpp_category = {journal},
  volume = 45,
  issue = 2,
  pages = {300-319},
  doi = {10.1007/s10766-016-0415-8},
  abstract = {SyDPaCC is a set of libraries for the Coq proof 
                  assistant. It allows to write naive functional 
                  programs (i.e. with high complexity) that are 
                  considered as specifications, and to transform them 
                  into more efficient versions. These more efficient 
                  versions can then be automatically parallelised 
                  before being extracted from Coq into source code for 
                  the functional language OCaml together with calls to 
                  the Bulk Synchronous Parallel ML (BSML) library. In 
                  this paper we present a new core version of SyDPaCC 
                  for the development of parallel programs 
                  correct-by-contruction using the theory of list 
                  homomorphisms and algorithmic skeletons implemented 
                  and verified in Coq. The framework is illustrated on 
                  the the maximum prefix sum problem.}
}

@inproceedings{LOU2017:CANDAR,
  author = {Loulergue, Fr\'{e}d\'{e}ric},
  title = {A Verified Accumulate Algorithmic Skeleton},
  year = 2017,
  booktitle = {Fifth International Symposium on Computing and 
                  Networking (CANDAR)},
  address = {Aomori, Japan},
  month = {November 19-22},
  publisher = {IEEE},
  pages = {420-426},
  doi = {10.1109/CANDAR.2017.108},
  hlpp_category = {international_conference},
  abstract = {This paper presents an extension of a library for 
                  the Coq interactive theorem prover that enables the 
                  development of correct functional parallel programs 
                  based on sequential program transformation and 
                  automatic parallelization using an algorithmic 
                  skeleton named accumulate.  Such an algorithmic 
                  skeleton is a pattern of a parallel algorithm that 
                  is provided as a high-order function implemented in 
                  parallel. The use of this framework is illustrated 
                  with the bracket matching problem, including 
                  experiments on a parallel machine.}
}

@inproceedings{LOU2017:HPCS,
  author = {Loulergue, Fr\'{e}d\'{e}ric},
  title = {{Systematic Development of Programs for Scalable 
                  Computing Using Coq} (Tutorial)},
  year = 2017,
  booktitle = {International Conference on High Performance 
                  Computing and Simulation (HPCS)},
  publisher = {IEEE},
  address = {Genoa, Italy},
  hlpp_educore = {B},
  hlpp_category = {tutorial_presentation},
  doi = {10.1109/HPCS.2017.8},
  abstract = { The SyDPaCC system is a set of libraries for the pr 
                  oof assistant Coq that allows to write naive (i.e. 
                  inef fi cient) functional programs then to transform 
                  them into ef fi cient versions that could be 
                  automatically parallelized within the framework 
                  before being extracted from Coq to code in the 
                  functional language OCaml plus calls to the parallel 
                  functional programming library Bulk Synchronous 
                  Parallel ML.  These goals of the tutorial are to 
                  provide an introduction to the development of 
                  correct-by-construction parallel programs, and to 
                  able the attendees to develop functio nal parallel 
                  programs using the SYDPACC system and the Coq proof 
                  assistant.  }
}

@inproceedings{LOU2017:ICCS,
  title = {{Imperative BSPlib-style Communications in Bulk 
                  Synchronous Parallel ML}},
  author = {Loulergue, Fr{\'e}d{\'e}ric},
  booktitle = iccs,
  year = 2017,
  series = {Procedia Computer Science},
  hlpp_educore = {A},
  pages = {2368-2372},
  address = {Zurich, Switzerland},
  abstract = {Bulk synchronous parallelism (BSP) oﬀers an abstract 
                  and simple model of parallelism yet allows to take 
                  realistically into account the communication costs 
                  of parallel algorithms. BSP has been used in many 
                  application domains. BSPlib and its variants are 
                  programming libraries for the C language that 
                  support the BSP style.  Bulk Synchronous Parallel ML 
                  (BSML) is a library for BSP programming with the 
                  functional language OCaml. It is based on an 
                  extension of the lambda-calculus by parallel 
                  operations on a data structure named parallel 
                  vector. BSML oﬀers a global view of programs, 
                  i.e. BSML programs can be seen as sequential 
                  programs working on a parallel data structure (seq 
                  of par) while a BSPlib program is written in the 
                  SPMD style and understood as a parallel composition 
                  of communicating sequential programs (par of 
                  seq). The communication styles of BSML and BSPlib 
                  are also quite diﬀerent. },
  hlpp_category = {international_conference},
  publisher = {Elsevier},
  doi = {10.1016/j.procs.2017.05.267}
}

@inproceedings{LOU2017:PDCAT,
  author = {Loulergue, Fr\'{e}d\'{e}ric},
  title = {{Implementing Algorithmic Skeletons with Bulk 
                  Synchronous Parallel ML}},
  booktitle = pdcat,
  year = 2017,
  publisher = {IEEE},
  abstract = {Skeletal parallelism offers a good trade-off between 
                  programming productivity and execution 
                  efficiency. In this style of parallelism, an 
                  application is a composition of algorithmic 
                  skeletons. An algorithmic skeleton captures a 
                  pattern of parallel algorithm on a distributed data 
                  structure, and is also often associated with a 
                  sequential algorithm on a sequential data structure 
                  that is the counterpart of the parallel data 
                  structure. The algorithmic skeleton approach has 
                  been inspired by functional programming.  It is 
                  therefore very natural to embed algorithmic 
                  skeletons in a functional programming language. In 
                  this paper we present a new algorithmic skeleton 
                  library for the statically typed functional language 
                  OCaml, and illustrate its use on some 
                  applications. This functional skeletal parallel 
                  programming library is implemented using the Bulk 
                  Synchronous Parallel ML parallel programming library 
                  for OCaml.},
  hlpp_category = {international_conference},
  hlpp_educore = {B},
  pages = {461-468},
  doi = {10.1109/PDCAT.2017.00079}
}

@article{LOU2017:SCPE,
  author = {Loulergue, Fr\'{e}d\'{e}ric},
  title = {A {BSP}lib-style {API} for {B}ulk {S}ynchronous 
                  {P}arallel {ML}},
  journal = {Scalable Computing: Practice and Experience},
  year = 2017,
  doi = {10.12694/scpe.v18i3.1306},
  volume = 18,
  issue = 3,
  pages = {261-274},
  hlpp_category = {journal},
  abstract = {Bulk synchronous parallelism (BSP) offers an 
                  abstract and simple model of parallelism yet allows 
                  to take realistically into account the communication 
                  costs of parallel algorithms. BSP has been used in 
                  many application domains. BSPlib and its variants 
                  are programming libraries for the C language that 
                  support the BSP style.  Bulk Synchronous Parallel ML 
                  (BSML) is a library for BSP programming with the 
                  functional language OCaml. It offers parallel 
                  operations on a data structure named parallel 
                  vector. BSML provides a global view of programs, 
                  i.e. BSML programs can be seen as sequential 
                  programs working on a parallel data structure (seq 
                  of par) while a BSPlib program is written in the 
                  SPMD style and understood as a parallel composition 
                  of communicating sequential programs (par of 
                  seq). The communication styles of BSML and BSPlib 
                  are also quite different.  The contribution of this 
                  paper is a BSPlib-style communication API 
                  implemented on top of BSML. It has been designed 
                  without extending BSML, but only using the 
                  imperative features of the underlying function 
                  language OCaml. Programs implemented using this API 
                  are very close to programs implemented using a 
                  BSPlib library for the C language. It therefore 
                  shows that BSML is universal for the BSP model.  }
}

@article{LOU2017a:SCPE,
  author = {Loulergue, Fr\'{e}d\'{e}ric},
  title = {{Special Issue on Practical Aspects of High-Level 
                  Parallel Programming}},
  journal = {Scalable Computing: Practice and Experience},
  year = 2017,
  volume = 18,
  abstract = {{Selected extended and revised papers from the 
                  International Workshop and the ACM SAC track on 
                  Practical Aspects of High-Level Parallel 
                  Programming}},
  hlpp_category = {special_issue},
  number = 1,
  url = {http://scpe.org/index.php/scpe/issue/view/135}
}

@inproceedings{NLB2017:PDCAT,
  author = {Niculescu, Virginia and Loulergue, Fr\'{e}d\'{e}ric 
                  and Bufnea, Darius and Sterca, Adrian},
  title = {{A Java Framework for High Level Parallel 
                  Programming using Powerlists}},
  booktitle = pdcat,
  year = 2017,
  publisher = {IEEE},
  abstract = {Parallel programs based on the Divide\&Conquer 
                  paradigm could be successfully defined in a simple 
                  way using powerlists.  These parallel recursive data 
                  structures and their algebraic theories offer both a 
                  methodology to design parallel algorithms and 
                  parallel programming abstractions to ease the 
                  development of parallel applications.  The paper 
                  presents how programs based on powerlists can be 
                  implemented in Java using the \framework{} framework 
                  we developed.  The design of this framework is based 
                  on powerlists theory, but in the same time follows 
                  the object-oriented design principles that provide 
                  flexibility and maintainability.  Examples are given 
                  and performance experiments are conducted. The 
                  results emphasise the utility and the efficiency of 
                  the framework.},
  hlpp_category = {international_conference},
  hlpp_educore = {B},
  pages = {255-262},
  doi = {10.1109/PDCAT.2017.00049}
}

@inproceedings{PLB2017:HPCS,
  author = {Philippe, Jolan and Loulergue, Fr\'{e}d\'{e}ric and 
                  Bousdira, Wadoud},
  title = {{Formalization of a Big Graph API in Coq (Poster)}},
  year = 2017,
  booktitle = {International Conference on High Performance 
                  Computing and Simulation (HPCS)},
  publisher = {IEEE},
  address = {Genoa, Italy},
  hlpp_educore = {B},
  hlpp_category = {poster},
  pages = {893-894},
  doi = {10.1109/HPCS.2017.140}
}

@article{THL2017:PPL,
  author = {Tachon, Thibaut and Li, Chong and Hains, Ga{\'e}tan 
                  and Loulergue, Fr{\'e}d{\'e}ric},
  title = {{Automated generation of BSP automata}},
  journal = {Parallel Processing Letters},
  year = 2017,
  abstract = {Bulk-Synchronous Parallel (BSP) is a bridging model 
                  between abstract execution and concrete parallel 
                  architectures that retains enough information to 
                  model performance scalability. In order to model BSP 
                  program executions, Hains adapted the theory of 
                  finite automata to the BSP paradigm by introducing 
                  BSP automata.  In the initial description of the 
                  theory, BSP automata had to be explicitly defined as 
                  structured sets of states and transitions. The lack 
                  of a clean and efficient algorithm for generating 
                  them from regular expressions would have prevented 
                  this theory from being used in practice.  To 
                  alleviate this problem we introduce in this paper an 
                  algorithm that generates a BSP automaton recognizing 
                  a BSP language defined by a BSP regular 
                  expression. The main practical use of BSP automata 
                  developed in this paper is the parallelization of 
                  finite state automata with an explicit distribution 
                  and a performance model, that enable parallel 
                  matching of regular expressions. Secondarily, BSP 
                  regular expressions provide a convenient structure 
                  for automatic code generation of imperative BSP 
                  program that is also developed in this paper.},
  hlpp_category = {journal},
  volume = 17,
  number = 1,
  doi = {10.1142/S0129626417400023}
}

@inproceedings{WL2017:HPCS,
  author = {Whitney, Christopher D. and Loulergue, 
                  Fr\'{e}d\'{e}ric},
  title = {{Towards a Verified Parallel Implementation of 
                  Frequent Itemset Mining (Poster)}},
  year = 2017,
  booktitle = {International Conference on High Performance 
                  Computing and Simulation (HPCS)},
  publisher = {IEEE},
  address = {Genoa, Italy},
  hlpp_educore = {B},
  hlpp_category = {poster},
  pages = {889-890},
  doi = {10.1109/HPCS.2017.138}
}

@article{DBLP:journals/jisa/SteinmacherRFW17,
  author = {Igor Steinmacher and
               Gregorio Robles and
               Brian Fitzgerald and
               Anthony I. Wasserman},
  title = {Free and open source software development: the end of the teenage
               years},
  journal = {J. Internet Services and Applications},
  volume = {8},
  number = {1},
  pages = {17:1--17:4},
  year = {2017},
  url = {https://doi.org/10.1186/s13174-017-0069-9},
  doi = {10.1186/s13174-017-0069-9},
  timestamp = {Thu, 18 Oct 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/jisa/SteinmacherRFW17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/jss/WieseRSKOTG17,
  author = {Igor Scaliante Wiese and
               Reginaldo R{\'{e}} and
               Igor Steinmacher and
               Rodrigo Takashi Kuroda and
               Gustavo Ansaldi Oliva and
               Christoph Treude and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Using contextual information to predict co-changes},
  journal = {Journal of Systems and Software},
  volume = {128},
  pages = {220--235},
  year = {2017},
  url = {https://doi.org/10.1016/j.jss.2016.07.016},
  doi = {10.1016/j.jss.2016.07.016},
  timestamp = {Thu, 28 Dec 2017 00:00:00 +0100},
  biburl = {https://dblp.org/rec/bib/journals/jss/WieseRSKOTG17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/software/ZanattaSMSP17,
  author = {Alexandre Lazaretti Zanatta and
               Igor Steinmacher and
               Leticia S. Machado and
               Cleidson R. B. de Souza and
               Rafael Prikladnicki},
  title = {Barriers Faced by Newcomers to Software-Crowdsourcing Projects},
  journal = {{IEEE} Software},
  volume = {34},
  number = {2},
  pages = {37--43},
  year = {2017},
  url = {https://doi.org/10.1109/MS.2017.32},
  doi = {10.1109/MS.2017.32},
  timestamp = {Thu, 18 May 2017 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/software/ZanattaSMSP17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/csee/PintoFSG17,
  author = {Gustavo Henrique Lima Pinto and
               Fernando Figueira Filho and
               Igor Steinmacher and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Training Software Engineers Using Open-Source Software: The Professors'
               Perspective},
  booktitle = {30th {IEEE} Conference on Software Engineering Education and Training,
               CSEE{\&}T 2017, Savannah, GA, USA, November 7-9, 2017},
  pages = {117--121},
  year = {2017},
  crossref = {DBLP:conf/csee/2017},
  url = {https://doi.org/10.1109/CSEET.2017.27},
  doi = {10.1109/CSEET.2017.27},
  timestamp = {Thu, 21 Dec 2017 12:57:47 +0100},
  biburl = {https://dblp.org/rec/bib/conf/csee/PintoFSG17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/csee/SilvaSC17,
  author = {Williamson Alison Freitas Silva and
               Igor Fabio Steinmacher and
               Tayana Uch{\^{o}}a Conte},
  title = {Is It Better to Learn from Problems or Erroneous Examples?},
  booktitle = {30th {IEEE} Conference on Software Engineering Education and Training,
               CSEE{\&}T 2017, Savannah, GA, USA, November 7-9, 2017},
  pages = {222--231},
  year = {2017},
  crossref = {DBLP:conf/csee/2017},
  url = {https://doi.org/10.1109/CSEET.2017.42},
  doi = {10.1109/CSEET.2017.42},
  timestamp = {Thu, 21 Dec 2017 12:57:47 +0100},
  biburl = {https://dblp.org/rec/bib/conf/csee/SilvaSC17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icse/DinizSGS17,
  author = {Guilherme C. Diniz and
               Marco Aur{\'{e}}lio Graciotto Silva and
               Marco Aur{\'{e}}lio Gerosa and
               Igor Steinmacher},
  title = {Using Gamification to Orient and Motivate Students to Contribute to
               {OSS} Projects},
  booktitle = {10th {IEEE/ACM} International Workshop on Cooperative and Human Aspects
               of Software Engineering, CHASE@ICSE 2017, Buenos Aires, Argentina,
               May 23, 2017},
  pages = {36--42},
  year = {2017},
  crossref = {DBLP:conf/icse/2017chase},
  url = {https://doi.org/10.1109/CHASE.2017.7},
  doi = {10.1109/CHASE.2017.7},
  timestamp = {Thu, 07 Sep 2017 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icse/DinizSGS17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icsm/SilvaWGSG17,
  author = {Jefferson De Oliveira Silva and
               Igor Scaliante Wiese and
               Daniel M. Germ{\'{a}}n and
               Igor Fabio Steinmacher and
               Marco Aur{\'{e}}lio Gerosa},
  title = {How Long and How Much: What to Expect from Summer of Code Participants?},
  booktitle = {2017 {IEEE} International Conference on Software Maintenance and Evolution,
               {ICSME} 2017, Shanghai, China, September 17-22, 2017},
  pages = {69--79},
  year = {2017},
  crossref = {DBLP:conf/icsm/2017},
  url = {https://doi.org/10.1109/ICSME.2017.81},
  doi = {10.1109/ICSME.2017.81},
  timestamp = {Fri, 01 Dec 2017 00:00:00 +0100},
  biburl = {https://dblp.org/rec/bib/conf/icsm/SilvaWGSG17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/sbes/SilvaWSG17,
  author = {Jefferson O. Silva and
               Igor Scaliante Wiese and
               Igor Steinmacher and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Students' Engagement in Open Source Projects: An Analysis of Google
               Summer of Code},
  booktitle = {Proceedings of the 31st Brazilian Symposium on Software Engineering,
               {SBES} 2017, Fortaleza, CE, Brazil, September 20-22, 2017},
  pages = {224--233},
  year = {2017},
  crossref = {DBLP:conf/sbes/2017},
  url = {http://doi.acm.org/10.1145/3131151.3131156},
  doi = {10.1145/3131151.3131156},
  timestamp = {Mon, 18 Sep 2017 09:07:48 +0200},
  biburl = {https://dblp.org/rec/bib/conf/sbes/SilvaWSG17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{GeorgasPM16,
  author = {John C. Georgas and
               James D. Palmer and
               Michael J. McCormick},
  title = {Supporting Software Architecture Learning Using Runtime Visualization},
  booktitle = {29th {IEEE} International Conference on Software Engineering Education
               and Training, {CSEET} 2016, Dallas, TX, USA, April 5-6, 2016},
  pages = {101--110},
  year = {2016},
  doi = {10.1109/CSEET.2016.19},
  timestamp = {Wed, 17 May 2017 10:55:00 +0200},
  biburl = {https://dblp.org/rec/bib/conf/csee/GeorgasPM16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/isf/VreedeAVGW16,
  author = {Gert{-}Jan de Vreede and
               Pedro Antunes and
               Julita Vassileva and
               Marco Aur{\'{e}}lio Gerosa and
               Kewen Wu},
  title = {Collaboration technology in teams and organizations: Introduction
               to the special issue},
  journal = {Information Systems Frontiers},
  volume = {18},
  number = {1},
  pages = {1--6},
  year = {2016},
  url = {https://doi.org/10.1007/s10796-016-9632-3},
  doi = {10.1007/s10796-016-9632-3},
  timestamp = {Tue, 26 Jun 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/isf/VreedeAVGW16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/jwsr/OlivaGKSM16,
  author = {Gustavo Ansaldi Oliva and
               Marco Aur{\'{e}}lio Gerosa and
               Fabio Kon and
               Virginia Smith and
               Dejan S. Milojicic},
  title = {A Static Change Impact Analysis Approach based on Metrics and Visualizations
               to Support the Evolution of Workflow Repositories},
  journal = {Int. J. Web Service Res.},
  volume = {13},
  number = {2},
  pages = {74--101},
  year = {2016},
  url = {https://doi.org/10.4018/IJWSR.2016040105},
  doi = {10.4018/IJWSR.2016040105},
  timestamp = {Sat, 20 May 2017 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/jwsr/OlivaGKSM16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/sigsoft/BosseG16,
  author = {Yorah Bosse and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Why is programming so difficult to learn?: Patterns of Difficulties
               Related to Programming Learning Mid-Stage},
  journal = {{ACM} {SIGSOFT} Software Engineering Notes},
  volume = {41},
  number = {6},
  pages = {1--6},
  year = {2016},
  url = {http://doi.acm.org/10.1145/3011286.3011301},
  doi = {10.1145/3011286.3011301},
  timestamp = {Tue, 17 Jan 2017 00:00:00 +0100},
  biburl = {https://dblp.org/rec/bib/journals/sigsoft/BosseG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/fie/BrandaoBG16,
  author = {Le{\^{o}}nidas de Oliveira Brand{\~{a}}o and
               Yorah Bosse and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Visual programming and automatic evaluation of exercises: An experience
               with a {STEM} course},
  booktitle = {2016 {IEEE} Frontiers in Education Conference, {FIE} 2015, Eire, PA,
               USA, October 12-15, 2016},
  pages = {1--9},
  year = {2016},
  crossref = {DBLP:conf/fie/2016},
  url = {https://doi.org/10.1109/FIE.2016.7757621},
  doi = {10.1109/FIE.2016.7757621},
  timestamp = {Tue, 23 May 2017 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/conf/fie/BrandaoBG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/hci/BertholdoG16,
  author = {Ana Paula O. Bertholdo and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Promoting Engagement in Open Collaboration Communities by Means of
               Gamification},
  booktitle = {{HCI} International 2016 - Posters' Extended Abstracts - 18th International
               Conference, {HCI} International 2016, Toronto, Canada, July 17-22,
               2016, Proceedings, Part {II}},
  pages = {15--20},
  year = {2016},
  crossref = {DBLP:conf/hci/2016-27},
  url = {https://doi.org/10.1007/978-3-319-40542-1\_3},
  doi = {10.1007/978-3-319-40542-1\_3},
  timestamp = {Wed, 24 May 2017 08:28:59 +0200},
  biburl = {https://dblp.org/rec/bib/conf/hci/BertholdoG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/hci/BertholdoKG16,
  author = {Ana Paula O. Bertholdo and
               Fabio Kon and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Agile Usability Patterns for User-Centered Design Final Stages},
  booktitle = {Human-Computer Interaction. Theory, Design, Development and Practice
               - 18th International Conference, {HCI} International 2016, Toronto,
               ON, Canada, July 17-22, 2016. Proceedings, Part {I}},
  pages = {433--444},
  year = {2016},
  crossref = {DBLP:conf/hci/2016-1},
  url = {https://doi.org/10.1007/978-3-319-39510-4\_40},
  doi = {10.1007/978-3-319-39510-4\_40},
  timestamp = {Wed, 24 May 2017 08:28:51 +0200},
  biburl = {https://dblp.org/rec/bib/conf/hci/BertholdoKG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icse/SteinmacherCTG16,
  author = {Igor Steinmacher and
               Tayana Uch{\^{o}}a Conte and
               Christoph Treude and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Overcoming open source project entry barriers with a portal for newcomers},
  booktitle = {Proceedings of the 38th International Conference on Software Engineering,
               {ICSE} 2016, Austin, TX, USA, May 14-22, 2016},
  pages = {273--284},
  year = {2016},
  crossref = {DBLP:conf/icse/2016},
  url = {http://doi.acm.org/10.1145/2884781.2884806},
  doi = {10.1145/2884781.2884806},
  timestamp = {Sun, 30 Apr 2017 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icse/SteinmacherCTG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icsm/AnicheBTDG16,
  author = {Mauricio Finavaro Aniche and
               Gabriele Bavota and
               Christoph Treude and
               Arie van Deursen and
               Marco Aur{\'{e}}lio Gerosa},
  title = {A Validated Set of Smells in Model-View-Controller Architectures},
  booktitle = {2016 {IEEE} International Conference on Software Maintenance and Evolution,
               {ICSME} 2016, Raleigh, NC, USA, October 2-7, 2016},
  pages = {233--243},
  year = {2016},
  crossref = {DBLP:conf/icsm/2016},
  url = {https://doi.org/10.1109/ICSME.2016.12},
  doi = {10.1109/ICSME.2016.12},
  timestamp = {Mon, 22 May 2017 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icsm/AnicheBTDG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icsm/WieseSSTG16,
  author = {Igor Scaliante Wiese and
               Jos{\'{e}} Teodoro da Silva and
               Igor Steinmacher and
               Christoph Treude and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Who is Who in the Mailing List? Comparing Six Disambiguation Heuristics
               to Identify Multiple Addresses of a Participant},
  booktitle = {2016 {IEEE} International Conference on Software Maintenance and Evolution,
               {ICSME} 2016, Raleigh, NC, USA, October 2-7, 2016},
  pages = {345--355},
  year = {2016},
  crossref = {DBLP:conf/icsm/2016},
  url = {https://doi.org/10.1109/ICSME.2016.13},
  doi = {10.1109/ICSME.2016.13},
  timestamp = {Mon, 22 May 2017 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icsm/WieseSSTG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icsm/DiasSPCG16,
  author = {Luiz Felipe Dias and
               Igor Steinmacher and
               Gustavo Pinto and
               Daniel Alencar da Costa and
               Marco Aur{\'{e}}lio Gerosa},
  title = {How Does the Shift to GitHub Impact Project Collaboration?},
  booktitle = {2016 {IEEE} International Conference on Software Maintenance and Evolution,
               {ICSME} 2016, Raleigh, NC, USA, October 2-7, 2016},
  pages = {473--477},
  year = {2016},
  crossref = {DBLP:conf/icsm/2016},
  url = {https://doi.org/10.1109/ICSME.2016.78},
  doi = {10.1109/ICSME.2016.78},
  timestamp = {Thu, 21 Dec 2017 00:00:00 +0100},
  biburl = {https://dblp.org/rec/bib/conf/icsm/DiasSPCG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/sbes/AnicheGT16,
  author = {Mauricio Finavaro Aniche and
               Marco Aur{\'{e}}lio Gerosa and
               Christoph Treude},
  title = {Developers' Perceptions on Object-Oriented Design and Architectural
               Roles},
  booktitle = {Proceedings of the 30th Brazilian Symposium on Software Engineering,
               {SBES} 2016, Maring{\'{a}}, Brazil, September 19 - 23, 2016},
  pages = {63--72},
  year = {2016},
  crossref = {DBLP:conf/sbes/2016},
  url = {http://doi.acm.org/10.1145/2973839.2973846},
  doi = {10.1145/2973839.2973846},
  timestamp = {Thu, 01 Sep 2016 16:00:44 +0200},
  biburl = {https://dblp.org/rec/bib/conf/sbes/AnicheGT16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/scam/AnicheTZDG16,
  author = {Mauricio Finavaro Aniche and
               Christoph Treude and
               Andy Zaidman and
               Arie van Deursen and
               Marco Aur{\'{e}}lio Gerosa},
  title = {{SATT:} Tailoring Code Metric Thresholds for Different Software Architectures},
  booktitle = {16th {IEEE} International Working Conference on Source Code Analysis
               and Manipulation, {SCAM} 2016, Raleigh, NC, USA, October 2-3, 2016},
  pages = {41--50},
  year = {2016},
  crossref = {DBLP:conf/scam/2016},
  url = {https://doi.org/10.1109/SCAM.2016.19},
  doi = {10.1109/SCAM.2016.19},
  timestamp = {Fri, 26 May 2017 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/conf/scam/AnicheTZDG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/sigsoft/SarmaGSL16,
  author = {Anita Sarma and
               Marco Aur{\'{e}}lio Gerosa and
               Igor Steinmacher and
               Rafael Leano},
  title = {Training the future workforce through task curation in an {OSS} ecosystem},
  booktitle = {Proceedings of the 24th {ACM} {SIGSOFT} International Symposium on
               Foundations of Software Engineering, {FSE} 2016, Seattle, WA, USA,
               November 13-18, 2016},
  pages = {932--935},
  year = {2016},
  crossref = {DBLP:conf/sigsoft/2016},
  url = {http://doi.acm.org/10.1145/2950290.2983984},
  doi = {10.1145/2950290.2983984},
  timestamp = {Tue, 22 Nov 2016 11:19:21 +0100},
  biburl = {https://dblp.org/rec/bib/conf/sigsoft/SarmaGSL16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/wcre/PintoSG16,
  author = {Gustavo Pinto and
               Igor Steinmacher and
               Marco Aur{\'{e}}lio Gerosa},
  title = {More Common Than You Think: An In-depth Study of Casual Contributors},
  booktitle = {{IEEE} 23rd International Conference on Software Analysis, Evolution,
               and Reengineering, {SANER} 2016, Suita, Osaka, Japan, March 14-18,
               2016 - Volume 1},
  pages = {112--123},
  year = {2016},
  crossref = {DBLP:conf/wcre/2016},
  url = {https://doi.org/10.1109/SANER.2016.68},
  doi = {10.1109/SANER.2016.68},
  timestamp = {Thu, 21 Dec 2017 00:00:00 +0100},
  biburl = {https://dblp.org/rec/bib/conf/wcre/PintoSG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/corr/SantanaCGKM16,
  author = {Eduardo Felipe Zambom Santana and
               Ana Paula Chaves and
               Marco Aur{\'{e}}lio Gerosa and
               Fabio Kon and
               Dejan S. Milojicic},
  title = {Software Platforms for Smart Cities: Concepts, Requirements, Challenges,
               and a Unified Reference Architecture},
  journal = {CoRR},
  volume = {abs/1609.08089},
  year = {2016},
  url = {http://arxiv.org/abs/1609.08089},
  archiveprefix = {arXiv},
  eprint = {1609.08089},
  timestamp = {Mon, 13 Aug 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/corr/SantanaCGKM16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Groce16,
  author = {Alex Groce},
  title = {Passages},
  journal = {{ACM} {SIGSOFT} Software Engineering Notes},
  volume = {41},
  number = {1},
  pages = {5},
  year = {2016},
  doi = {10.1145/2853073.2853074},
  timestamp = {Thu, 17 Mar 2016 00:00:00 +0100},
  biburl = {https://dblp.org/rec/bib/journals/sigsoft/Groce16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Groce16a,
  author = {Alex Groce},
  title = {Passages},
  journal = {{ACM} {SIGSOFT} Software Engineering Notes},
  volume = {41},
  number = {2},
  pages = {5},
  year = {2016},
  doi = {10.1145/2894784.2894788},
  timestamp = {Thu, 12 May 2016 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/sigsoft/Groce16a},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Groce16b,
  author = {Alex Groce},
  title = {Passages},
  journal = {{ACM} {SIGSOFT} Software Engineering Notes},
  volume = {41},
  number = {3},
  pages = {4--5},
  year = {2016},
  doi = {10.1145/2934240.2934241},
  timestamp = {Wed, 13 Jul 2016 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/sigsoft/Groce16b},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Groce16c,
  author = {Alex Groce},
  title = {Passages},
  journal = {{ACM} {SIGSOFT} Software Engineering Notes},
  volume = {41},
  number = {4},
  pages = {6--7},
  year = {2016},
  doi = {10.1145/2967307.2967312},
  timestamp = {Wed, 14 Sep 2016 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/sigsoft/Groce16c},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Groce16d,
  author = {Alex Groce},
  title = {Passages},
  journal = {{ACM} {SIGSOFT} Software Engineering Notes},
  volume = {41},
  number = {5},
  pages = {6--5},
  year = {2016},
  url = {http://dl.acm.org/citation.cfm?id=2994211},
  timestamp = {Tue, 15 Nov 2016 00:00:00 +0100},
  biburl = {https://dblp.org/rec/bib/journals/sigsoft/Groce16d},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Groce16e,
  author = {Alex Groce},
  title = {Passages},
  journal = {{ACM} {SIGSOFT} Software Engineering Notes},
  volume = {41},
  number = {6},
  pages = {5--6},
  year = {2016},
  doi = {10.1145/3011286.3011289},
  timestamp = {Tue, 17 Jan 2017 00:00:00 +0100},
  biburl = {https://dblp.org/rec/bib/journals/sigsoft/Groce16e},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{GroceAZCR16,
  author = {Alex Groce and
               Mohammad Amin Alipour and
               Chaoqiang Zhang and
               Yang Chen and
               John Regehr},
  title = {Cause reduction: delta debugging, even without bugs},
  journal = {Softw. Test., Verif. Reliab.},
  volume = {26},
  number = {1},
  pages = {40--68},
  year = {2016},
  doi = {10.1002/stvr.1574},
  timestamp = {Thu, 08 Jun 2017 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/stvr/GroceAZCR16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{GopinathAAJG16a,
  author = {Rahul Gopinath and
               Mohammad Amin Alipour and
               Iftekhar Ahmed and
               Carlos Jensen and
               Alex Groce},
  title = {On the limits of mutation reduction strategies},
  booktitle = {Proceedings of the 38th International Conference on Software Engineering,
               {ICSE} 2016, Austin, TX, USA, May 14-22, 2016},
  pages = {511--522},
  year = {2016},
  doi = {10.1145/2884781.2884787},
  timestamp = {Sun, 09 Sep 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icse/GopinathAAJG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{GopinathJG16,
  author = {Rahul Gopinath and
               Carlos Jensen and
               Alex Groce},
  title = {Topsy-Turvy: a smarter and faster parallelization of mutation analysis},
  booktitle = {Proceedings of the 38th International Conference on Software Engineering,
               {ICSE} 2016, Austin, TX, USA, May 14-22, 2016 - Companion Volume},
  pages = {740--743},
  year = {2016},
  doi = {10.1145/2884781.2892655},
  timestamp = {Sun, 30 Apr 2017 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icse/GopinathJG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{GopinathAAJG16,
  author = {Rahul Gopinath and
               Amin Alipour and
               Iftekhar Ahmed and
               Carlos Jensen and
               Alex Groce},
  title = {Measuring Effectiveness of Mutant Sets},
  booktitle = {Ninth {IEEE} International Conference on Software Testing, Verification
               and Validation Workshops, {ICST} Workshops 2016, Chicago, IL, USA,
               April 11-15, 2016},
  pages = {132--141},
  year = {2016},
  doi = {10.1109/ICSTW.2016.45},
  timestamp = {Sun, 09 Sep 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icst/GopinathAAJG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{AlipourGGC16,
  author = {Mohammad Amin Alipour and
               Alex Groce and
               Rahul Gopinath and
               Arpit Christi},
  title = {Generating focused random tests using directed swarm testing},
  booktitle = {Proceedings of the 25th International Symposium on Software Testing
               and Analysis, {ISSTA} 2016, Saarbr{\"{u}}cken, Germany, July 18-20,
               2016},
  pages = {70--81},
  year = {2016},
  url = {http://doi.acm.org/10.1145/2931037.2931056},
  doi = {10.1145/2931037.2931056},
  timestamp = {Sun, 04 Jun 2017 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/conf/AlipourGGC16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{AlipourSGMG16,
  author = {Mohammad Amin Alipour and
               August Shi and
               Rahul Gopinath and
               Darko Marinov and
               Alex Groce},
  title = {Evaluating non-adequate test-case reduction},
  booktitle = {Proceedings of the 31st {IEEE/ACM} International Conference on Automated
               Software Engineering, {ASE} 2016, Singapore, September 3-7, 2016},
  pages = {16--26},
  year = {2016},
  doi = {10.1145/2970276.2970361},
  timestamp = {Sat, 15 Sep 2018 12:02:31 +0200},
  biburl = {https://dblp.org/rec/bib/conf/kbse/AlipourSGMG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{HolmesGA16,
  author = {Josie Holmes and
               Alex Groce and
               Mohammad Amin Alipour},
  title = {Mitigating (and exploiting) test reduction slippage},
  booktitle = {Proceedings of the 7th International Workshop on Automating Test Case
               Design, Selection, and Evaluation, A-TEST@SIGSOFT {FSE} 2016, Seattle,
               WA, USA, November 18, 2016},
  pages = {66--69},
  year = {2016},
  url = {http://dl.acm.org/citation.cfm?id=2994301},
  timestamp = {Wed, 15 Mar 2017 09:30:49 +0100},
  biburl = {https://dblp.org/rec/bib/conf/sigsoft/HolmesGA16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{AhmedGBGJ16,
  author = {Iftekhar Ahmed and
               Rahul Gopinath and
               Caius Brindescu and
               Alex Groce and
               Carlos Jensen},
  title = {Can testedness be effectively measured?},
  booktitle = {Proceedings of the 24th {ACM} {SIGSOFT} International Symposium on
               Foundations of Software Engineering, {FSE} 2016, Seattle, WA, USA,
               November 13-18, 2016},
  pages = {547--558},
  year = {2016},
  doi = {10.1145/2950290.2950324},
  timestamp = {Sun, 09 Sep 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/conf/sigsoft/AhmedGBGJ16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{AburasG16,
  author = {Ali Aburas and
               Alex Groce},
  title = {A Method Dependence Relations Guided Genetic Algorithm},
  booktitle = {Search Based Software Engineering - 8th International Symposium, {SSBSE}
               2016, Raleigh, NC, USA, October 8-10, 2016, Proceedings},
  pages = {267--273},
  year = {2016},
  url = {https://doi.org/10.1007/978-3-319-47106-8\_22},
  doi = {10.1007/978-3-319-47106-8\_22},
  timestamp = {Fri, 26 May 2017 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/conf/ssbse/AburasG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{AlipourGZSC16,
  author = {Mohammad Amin Alipour and
               Alex Groce and
               Chaoqiang Zhang and
               Anahita Sanadaji and
               Gokul Caushik},
  title = {Finding Model-Checkable Needles in Large Source Code Haystacks: Modular
               Bug-Finding via Static Analysis and Dynamic Invariant Discovery},
  journal = {CoRR},
  volume = {abs/1609.06382},
  year = {2016},
  url = {http://arxiv.org/abs/1609.06382},
  archiveprefix = {arXiv},
  eprint = {1609.06382},
  timestamp = {Mon, 13 Aug 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/corr/AlipourGZSC16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{AlipourG16,
  author = {Mohammad Amin Alipour and
               Alex Groce},
  title = {Bounded Model Checking and Feature Omission Diversity},
  journal = {CoRR},
  volume = {abs/1610.08020},
  year = {2016},
  url = {http://arxiv.org/abs/1610.08020},
  archiveprefix = {arXiv},
  eprint = {1610.08020},
  timestamp = {Mon, 13 Aug 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/corr/AlipourG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{AlipourG16a,
  author = {Mohammad Amin Alipour and
               Alex Groce},
  title = {Data Poisoning: Lightweight Soft Fault Injection for Python},
  journal = {CoRR},
  volume = {abs/1611.01501},
  year = {2016},
  url = {http://arxiv.org/abs/1611.01501},
  archiveprefix = {arXiv},
  eprint = {1611.01501},
  timestamp = {Mon, 13 Aug 2018 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/journals/corr/AlipourG16a},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{BKL2016:CSTVA,
  author = {Blanchard, Allan and Kosmatov, Nikolai and 
                  Loulergue, Fr\'{e}d\'{e}ric},
  title = {{A CHR-Based Solver for Weak Memory Behaviors}},
  booktitle = {7th Workshop on Constraint Solvers in Testing, 
                  Verification, and Analysis (CSTVA)},
  year = 2016,
  publisher = {CEUR Workshop Proceedings},
  hlpp_educode = {C},
  pages = {15-22},
  hlpp_category = {international_workshop},
  abstract = {With the wide expansion of multiprocessor 
                  architectures, the analysis and reasoning for 
                  programs under weak memory models has become an 
                  important concern.  This work presents an original 
                  constraint solver for detecting program behaviors 
                  respecting a particular memory model.  It is 
                  implemented in Prolog using CHR (Constraint Handling 
                  Rules).  The CHR formalism provides a convenient 
                  generic solution for specifying memory models, that 
                  benefits from the existing optimized implementations 
                  of CHR and can be easily extended to new models.  We 
                  briefly present the solver design, illustrate the 
                  encoding of memory model constraints in CHR and 
                  discuss the benefits and limitations of the 
                  proposal.  },
  url = {http://ceur-ws.org/Vol-1639/paper-04.pdf}
}

@inproceedings{BKL2016:SCAM,
  author = {Allan Blanchard and Nikolai Kosmatov and Matthieu 
                  Lemerre and Fr\'{e}d\'{e}ric Loulergue},
  title = {conc2seq: A {F}rama-{C} Plugin for Verification of 
                  Parallel Compositions of {C} Programs},
  booktitle = {16th IEEE International Working Conference on Source 
                  Code Analysis and Manipulation (SCAM)},
  year = 2016,
  address = {Raleigh, NC, USA},
  publisher = {IEEE},
  pages = {67-72},
  doi = {10.1109/SCAM.2016.18},
  hlpp_category = {international_conference},
  hlpp_educore = {C},
  abstract = {{F}rama-{C} is an extensible modular framework for 
                  analysis of C programs that offers different 
                  analyzers in the form of collaborating plugins. 
                  Currently, {F}rama-{C} does not support the proof of 
                  functional properties of concurrent code.  We 
                  present conc2seq, a new code transformation based 
                  tool realized as a {F}rama-{C} plugin and dedicated 
                  to the verification of concurrent C programs. 
                  Assuming the program under verification respects an 
                  interleaving semantics, conc2seq transforms the 
                  original concurrent C program into a sequential one 
                  in which concurrency is simulated by interleavings. 
                  User specifications are automatically reintegrated 
                  into the new code without manual intervention.  The 
                  goal of the proposed code transformation technique 
                  is to allow the user to reason about a concurrent 
                  program through the interleaving semantics using 
                  existing {F}rama-{C} analyzers.}
}

@inproceedings{LOU2016:SAC,
  author = {Loulergue, Fr\'{e}d\'{e}ric},
  title = {Development of Correct-by-Construction Functional 
                  Parallel Programs (Tutorial)},
  booktitle = sac,
  publisher = {ACM},
  hlpp_category = {tutorial_presentation},
  hlpp_core = {B},
  url = {http://portalparts.acm.org/2860000/2851613/fm/frontmatter.pdf?ip=134.114.109.143&CFID=946546346&CFTOKEN=16500996},
  year = 2016,
  abstract = { The SyDPaCC system is a set of libraries for the pr 
                  oof assistant Coq that allows to write naive (i.e. 
                  inef fi cient) functional programs then to transform 
                  them into ef fi cient versions that could be 
                  automatically parallelized within the framework 
                  before being extracted from Coq to code in the 
                  functional language OCaml plus calls to the parallel 
                  functional programming library Bulk Synchronous 
                  Parallel ML.  These goals of the tutorial are to 
                  provide an introduction to the development of 
                  correct-by-construction parallel programs, and to 
                  able the attendees to develop functio nal parallel 
                  programs using the SYDPACC system and the Coq proof 
                  assistant.  }
}

@inproceedings{THL2016:HLPP,
  title = {{Automated generation of BSP automata}},
  author = {Tachon, Thibaut and Hains, Ga{\'e}tan and Loulergue, 
                  Fr{\'e}d{\'e}ric and Li, Chong},
  booktitle = {{High Level Parallel Programming and Applications 
                  (HLPP)}},
  address = {M{\"u}nster, Germany},
  year = 2016,
  hlpp_category = {international_conference_communication},
  hlpp_educore = {C},
  abstract = {Bulk-Synchronous Parallel (BSP) is a bridging model 
                  between abstract execution and concrete parallel 
                  architecture. In order to model BSP program 
                  executions Hains adapted the finite automata theory 
                  to the BSP paradigm by introducing BSP automata 
                  theory.  Benefit provided by BSP automata is 
                  twofold: modeling BSP program control and 
                  parallelizing finite state automata.  The lack of 
                  generation algorithm of BSP automata and the 
                  illusory lack of application of this theory has been 
                  preventing this theory from being used.  We propose 
                  in this paper an algorithm that generates a BSP 
                  automaton recognizing a defined BSP language.  In 
                  order to demonstrate the usefulness of BSP automata 
                  and help to design its use, two applications of the 
                  BSP automata theory are provided. The parallel 
                  recognition of an expression and debugging of a BSP 
                  program.}
}

@inproceedings{DBLP:conf/icse/SteinmacherCTG16,
  author = {Igor Steinmacher and
               Tayana Uch{\^{o}}a Conte and
               Christoph Treude and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Overcoming open source project entry barriers with a portal for newcomers},
  booktitle = {Proceedings of the 38th International Conference on Software Engineering,
               {ICSE} 2016, Austin, TX, USA, May 14-22, 2016},
  pages = {273--284},
  year = {2016},
  crossref = {DBLP:conf/icse/2016},
  url = {http://doi.acm.org/10.1145/2884781.2884806},
  doi = {10.1145/2884781.2884806},
  timestamp = {Sun, 30 Apr 2017 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icse/SteinmacherCTG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icsm/WieseSSTG16,
  author = {Igor Scaliante Wiese and
               Jos{\'{e}} Teodoro da Silva and
               Igor Steinmacher and
               Christoph Treude and
               Marco Aur{\'{e}}lio Gerosa},
  title = {Who is Who in the Mailing List? Comparing Six Disambiguation Heuristics
               to Identify Multiple Addresses of a Participant},
  booktitle = {2016 {IEEE} International Conference on Software Maintenance and Evolution,
               {ICSME} 2016, Raleigh, NC, USA, October 2-7, 2016},
  pages = {345--355},
  year = {2016},
  crossref = {DBLP:conf/icsm/2016},
  url = {https://doi.org/10.1109/ICSME.2016.13},
  doi = {10.1109/ICSME.2016.13},
  timestamp = {Mon, 22 May 2017 01:00:00 +0200},
  biburl = {https://dblp.org/rec/bib/conf/icsm/WieseSSTG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icsm/DiasSPCG16,
  author = {Luiz Felipe Dias and
               Igor Steinmacher and
               Gustavo Pinto and
               Daniel Alencar da Costa and
               Marco Aur{\'{e}}lio Gerosa},
  title = {How Does the Shift to GitHub Impact Project Collaboration?},
  booktitle = {2016 {IEEE} International Conference on Software Maintenance and Evolution,
               {ICSME} 2016, Raleigh, NC, USA, October 2-7, 2016},
  pages = {473--477},
  year = {2016},
  crossref = {DBLP:conf/icsm/2016},
  url = {https://doi.org/10.1109/ICSME.2016.78},
  doi = {10.1109/ICSME.2016.78},
  timestamp = {Thu, 21 Dec 2017 00:00:00 +0100},
  biburl = {https://dblp.org/rec/bib/conf/icsm/DiasSPCG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/sbes/NascimentoSCSMT16,
  author = {Elizamary Nascimento and
               Williamson Silva and
               Tayana Conte and
               Igor Steinmacher and
               Jobson L. Massollar and
               Guilherme Horta Travassos},
  title = {Is a Picture worth a Thousand Words?: {A} Comparative Analysis of
               Using Textual and Graphical Approaches to Specify Use Cases},
  booktitle = {Proceedings of the 30th Brazilian Symposium on Software Engineering,
               {SBES} 2016, Maring{\'{a}}, Brazil, September 19 - 23, 2016},
  pages = {93--102},
  year = {2016},
  crossref = {DBLP:conf/sbes/2016},
  url = {http://doi.acm.org/10.1145/2973839.2973855},
  doi = {10.1145/2973839.2973855},
  timestamp = {Thu, 01 Sep 2016 16:00:44 +0200},
  biburl = {https://dblp.org/rec/bib/conf/sbes/NascimentoSCSMT16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/sigsoft/SarmaGSL16,
  author = {Anita Sarma and
               Marco Aur{\'{e}}lio Gerosa and
               Igor Steinmacher and
               Rafael Leano},
  title = {Training the future workforce through task curation in an {OSS} ecosystem},
  booktitle = {Proceedings of the 24th {ACM} {SIGSOFT} International Symposium on
               Foundations of Software Engineering, {FSE} 2016, Seattle, WA, USA,
               November 13-18, 2016},
  pages = {932--935},
  year = {2016},
  crossref = {DBLP:conf/sigsoft/2016},
  url = {http://doi.acm.org/10.1145/2950290.2983984},
  doi = {10.1145/2950290.2983984},
  timestamp = {Tue, 22 Nov 2016 11:19:21 +0100},
  biburl = {https://dblp.org/rec/bib/conf/sigsoft/SarmaGSL16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/wcre/PintoSG16,
  author = {Gustavo Pinto and
               Igor Steinmacher and
               Marco Aur{\'{e}}lio Gerosa},
  title = {More Common Than You Think: An In-depth Study of Casual Contributors},
  booktitle = {{IEEE} 23rd International Conference on Software Analysis, Evolution,
               and Reengineering, {SANER} 2016, Suita, Osaka, Japan, March 14-18,
               2016 - Volume 1},
  pages = {112--123},
  year = {2016},
  crossref = {DBLP:conf/wcre/2016},
  url = {https://doi.org/10.1109/SANER.2016.68},
  doi = {10.1109/SANER.2016.68},
  timestamp = {Thu, 21 Dec 2017 00:00:00 +0100},
  biburl = {https://dblp.org/rec/bib/conf/wcre/PintoSG16},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

